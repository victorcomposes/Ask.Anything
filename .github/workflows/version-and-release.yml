name: Version and Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET Core 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Setup .NET Core 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Setup .NET Core 7.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Install Versionize
        run: dotnet tool install --global Versionize
      - name: Setup git
        run: |
          git config --local user.email "e7victor@gmail.com"
          git config --local user.name "Victor I"
      - name: Versionize Release
        id: versionize
        run: versionize --changelog-all --exit-insignificant-commits
        continue-on-error: true
      - name: No release required
        if: steps.versionize.outcome != 'success'
        run: echo "Skipping Release. No release required."
      - name: Push changes to GitHub
        if: steps.versionize.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      - name: "Create release"
        if: steps.versionize.outcome == 'success'
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              const tags_url = context.payload.repository.tags_url + "?per_page=1"
              const result = await github.request(tags_url)
              const current_tag = result.data[0].name
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: current_tag,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: current_tag,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
      - name: Build Ask.Anything.Api with dotnet
        run: dotnet build Ask.Anything.Api/Ask.Anything.Api.csproj --configuration Release

      - name: Publish Ask.Anything.Api
        run: dotnet publish Ask.Anything.Api/Ask.Anything.Api.csproj -c Release -o ./ask-anything-api

      - name: Deploy Ask.Anything.Api to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'victorcomposes'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E5AB4817CC974428B197F44EDEE653FA }}
          package: ./ask-anything-api

      - name: Build Ask.Anything.Blazor.WASM with dotnet
        run: dotnet build Ask.Anything.Blazor.WASM/Ask.Anything.Blazor.WASM.csproj --configuration Release

      - name: Publish Ask.Anything.Blazor.WASM
        run: dotnet publish Ask.Anything.Blazor.WASM/Ask.Anything.Blazor.WASM.csproj -c Release -o ./ask-anything-wasm

      - name: Deploy Ask.Anything.Blazor.WASM to Azure Web App
        id: deploy-to-staticapp
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_FOREST_00A30E703 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          skip_app_build: true
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          app_location: "ask-anything-wasm/wwwroot" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "ask-anything-wasm/wwwroot" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######